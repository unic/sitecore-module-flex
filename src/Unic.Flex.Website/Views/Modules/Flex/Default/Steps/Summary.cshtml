@using Unic.Flex.Core.Globalization
@using Unic.Flex.Core.Presentation
@using Unic.Flex.Implementation.Fields.TextOnly
@model Unic.Flex.Model.ViewModel.Steps.SummaryViewModel

@{
    var stepTitle = string.Empty;
    
    if (Model.ShowNavigationPane && Model.NavigationPane != null)
    {
        @Html.FlexComponent(m => m.NavigationPane)
    }
}

<div class="flex_multistep_active">
    <section class="flex_multistep_content">
        <h1 class="visuallyhidden">@Model.Title</h1>

        <section class="flex_summary">

            <h1 class="visuallyhidden">@Model.Title</h1>
            
            @if (!string.IsNullOrWhiteSpace(Model.Introduction))
            {
                <p>@Html.Raw(Model.Introduction.Replace(Environment.NewLine, "<br />"))</p>
            }

            @foreach (var stepSection in Model.Sections.Where(s => !s.IsHidden))
            {
                if (stepTitle != stepSection.StepTitle)
                {
                    stepTitle = stepSection.StepTitle;
                    <h2>@stepTitle</h2>
                }

                if (!stepSection.DisableFieldset && !string.IsNullOrWhiteSpace(stepSection.Title))
                {
                    <h3>@stepSection.Title</h3>
                }

                <ul class="flex_summary_list">
                    @foreach (var field in stepSection.Fields.Where(f => !f.IsHidden))
                    {
                        <li class="flex_summary_item">
                            <strong>@Html.Raw(@Html.GetLabelWithReplacedLink(field.Label, field.LabelLink))</strong>
                            <div>
                                @if (field is TextOnlyFieldViewModel)
                                {
                                    @Html.Raw(field.TextValue)
                                }
                                else
                                {
                                    foreach (var item in field.TextValue.Split(new[] { Environment.NewLine }, StringSplitOptions.None))
                                    {
                                         @item<br />
                                    }
                                }
                            </div>
                        </li>
                    }
                </ul>
            }
        </section>

        <div class="flex_formfooter flex_var_multistep">
            <div class="flex_buttoncontainer">
                @if (!string.IsNullOrWhiteSpace(Model.CancelUrl))
                {
                    <a class="flex_button_secondary" href="@Model.CancelUrl">@Model.CancelText</a>
                }

                @if (!string.IsNullOrWhiteSpace(Model.PreviousStepUrl))
                {
                    <a class="flex_button_secondary" href="@Model.PreviousStepUrl">@Model.PreviousButtonText</a>
                }

                <button type="submit" role="button">
                    <span>
                        @string.Format("{0}", !string.IsNullOrWhiteSpace(Model.ButtonText) ? Model.ButtonText : TranslationHelper.FlexText("Finish Form"))
                    </span>
                </button>
            </div>
        </div>

    </section>
</div>