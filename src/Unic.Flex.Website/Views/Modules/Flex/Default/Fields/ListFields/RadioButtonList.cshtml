@using System.Web.Mvc.Html
@using Unic.Flex.Definitions
@using Unic.Flex.Presentation
@model Unic.Flex.Implementation.Fields.ListFields.RadioButtonListFieldViewModel

<li class="flex_listitem @Model.CssClass">
    
    <fieldset role="radiogroup">
        <legend class="flex_label" id="@Html.IdForModel()">
            @Model.Label
        </legend>

        <div class="flex_radiogroupoptions">
            
            @{
                var attributes = Html.FormatAttributes(Html.GetAttributes(Model));
                var propertyName = string.Format("{0}.Value", ViewData.TemplateInfo.HtmlFieldPrefix);
            }
            
            @for (var i = 0; i < Model.Items.Count(); i++)
            {
                var item = Model.Items[i];
                var propertyId = Html.GetId(string.Format("Radio[{0}]", i));
                var propertyLabel = string.Format("{0}_{1}", propertyId, Constants.LabelIdSuffix);
                var selected = Model.Value != null && Model.Value.Contains(item.Value);
                var selectedText = selected ? "checked=\"checked\"" : string.Empty;
                
                <div class="flex_radiogroupoption">

                    <input type="radio" name="@propertyName" id="@propertyId" value="@item.Value" role="radio"
                           aria-multiline="false" aria-labelledby="@propertyLabel" aria-checked="@selected.ToString()"
                           @Html.Raw(attributes) @Html.Raw(selectedText) />

                    <label class="flex_label" for="@propertyId" id="@propertyLabel">
                        @item.Text
                    </label>

                </div>
            }

        </div>
    </fieldset>

    @Html.FlexValidator(model => model.Value)
    @Html.FlexComponent(model => model.Tooltip)
</li>