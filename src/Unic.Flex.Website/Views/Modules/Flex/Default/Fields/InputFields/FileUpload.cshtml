@using Unic.Flex.Context
@using Unic.Flex.Definitions
@using Unic.Flex.DependencyInjection
@using Unic.Flex.Globalization
@using Unic.Flex.Presentation
@model Unic.Flex.Implementation.Fields.InputFields.FileUploadFieldViewModel

<li class="flex_listitem @Model.CssClass" @Html.Raw(Html.FormatAttributes(Model.ContainerAttributes)) data-init="flexfileinput" data-flexfileinput-options='{"clearUrl": "@Url.Action("RemoveUploadedFile", "Flex", new { sc_itemid = Sitecore.Context.Item.ID, form = Container.Resolve<IFlexContext>().Form.Id, field = Model.Id })"}'>

    @Html.FlexLabel(m => m.Value, Model.Label, Model.LabelAddition)

    <input type="file" name="@Html.GetName(Constants.ValueIdSuffix)" id="@Html.GetId(Constants.ValueIdSuffix)" @Html.Raw(Html.FormatAttributes(Html.GetAttributes(Model))) />

    @if (Model.Value != null)
    {
        <div class="flex_fileinputcurrent" data-flexfileinput="current">
            <span class="flex_currentfileinfo">
                <span class="visuallyhidden">@TranslationHelper.FlexText("Current file"): </span>
                <span class="flex_currentfilename">@Model.Value.FileName</span>
            </span>
            <a class="flex_fileinputremove" href="#" data-flexfileinput="remove">@TranslationHelper.FlexText("Delete file")</a>
        </div>
    }

    @Html.FlexValidator(model => model.Value)
    @Html.FlexComponent(model => model.Tooltip)
</li>